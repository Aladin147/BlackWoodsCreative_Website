import React from 'react';
import { render, screen } from '@testing-library/react';
import HomePage from '../page';

// Mock all the complex components to focus on page structure
jest.mock('../../components/layout/Header', () => ({
  Header: () => <header data-testid="header">Header</header>,
}));

jest.mock('../../components/layout/Footer', () => ({
  Footer: () => <footer data-testid="footer">Footer</footer>,
}));

jest.mock('../../components/sections/HeroSection', () => ({
  HeroSection: () => <section data-testid="hero-section">Hero Section</section>,
}));

jest.mock('../../components/sections/VisionSection', () => ({
  VisionSection: () => <section data-testid="vision-section">Vision Section</section>,
}));

jest.mock('../../components/sections/ContactSection', () => ({
  ContactSection: () => <section data-testid="contact-section">Contact Section</section>,
}));

// Mock the sections index file
jest.mock('../../components/sections', () => ({
  HeroSection: () => <section data-testid="hero-section">Hero Section</section>,
  PortfolioSection: () => <section data-testid="portfolio-section">Portfolio Section</section>,
  AboutSection: () => <section data-testid="about-section">About Section</section>,
  ContactSection: () => <section data-testid="contact-section">Contact Section</section>,
}));

jest.mock('../../components/layout', () => ({
  Footer: () => <footer data-testid="footer">Footer</footer>,
}));

// Mock framer-motion
jest.mock('framer-motion', () => ({
  motion: {
    main: ({ children, ...props }: React.ComponentProps<'main'>) => <main {...props}>{children}</main>,
  },
}));

describe('HomePage', () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  it('renders without crashing', () => {
    render(<HomePage />);
    // Check that the page renders with loading states and static sections
    expect(screen.getByText('BlackWoods Creative')).toBeInTheDocument();
    expect(screen.getByTestId('about-section')).toBeInTheDocument();
    expect(screen.getByTestId('contact-section')).toBeInTheDocument();
    expect(screen.getByTestId('footer')).toBeInTheDocument();
  });

  it('renders the footer component', () => {
    render(<HomePage />);
    expect(screen.getByTestId('footer')).toBeInTheDocument();
  });

  it('renders the hero section loading state', () => {
    render(<HomePage />);
    expect(screen.getByText('BlackWoods Creative')).toBeInTheDocument();
    expect(screen.getByText('Loading...')).toBeInTheDocument();
  });

  it('renders the vision section loading state', () => {
    render(<HomePage />);
    expect(screen.getByText('Experience the Difference')).toBeInTheDocument();
    expect(screen.getByText('Loading vision...')).toBeInTheDocument();
  });

  it('renders the portfolio section loading state', () => {
    render(<HomePage />);
    expect(screen.getByText('Our')).toBeInTheDocument();
    expect(screen.getByText('Portfolio')).toBeInTheDocument();
    expect(screen.getByText('Loading portfolio...')).toBeInTheDocument();
  });

  it('renders the about section', () => {
    render(<HomePage />);
    expect(screen.getByTestId('about-section')).toBeInTheDocument();
  });

  it('renders the contact section', () => {
    render(<HomePage />);
    expect(screen.getByTestId('contact-section')).toBeInTheDocument();
  });

  it('has proper page structure', () => {
    render(<HomePage />);

    // Check that all major sections are present (loading states + static sections)
    expect(screen.getByText('BlackWoods Creative')).toBeInTheDocument(); // Hero loading
    expect(screen.getByText('Loading portfolio...')).toBeInTheDocument(); // Portfolio loading
    expect(screen.getByText('Loading vision...')).toBeInTheDocument(); // Vision loading
    expect(screen.getByTestId('about-section')).toBeInTheDocument(); // Static section
    expect(screen.getByTestId('contact-section')).toBeInTheDocument(); // Static section
    expect(screen.getByTestId('footer')).toBeInTheDocument(); // Static footer
  });

  it('renders sections in correct order', () => {
    const { container } = render(<HomePage />);

    // Check that static sections are present (dynamic sections show loading states)
    const sections = container.querySelectorAll('[data-testid*="section"]');

    // Only static sections have testids during loading
    expect(sections[0]).toHaveAttribute('data-testid', 'about-section');
    expect(sections[1]).toHaveAttribute('data-testid', 'contact-section');

    // Check that loading content appears in correct order
    const allContent = container.textContent;
    expect(allContent?.indexOf('BlackWoods Creative')).toBeLessThan(allContent?.indexOf('Loading portfolio...') || 0);
    expect(allContent?.indexOf('Loading portfolio...')).toBeLessThan(allContent?.indexOf('Experience the Difference') || 0);
  });

  it('maintains semantic HTML structure', () => {
    render(<HomePage />);

    // Check for footer element
    expect(screen.getByTestId('footer')).toBeInTheDocument();
  });

  it('handles component mounting without errors', () => {
    const consoleSpy = jest.spyOn(console, 'error').mockImplementation();

    render(<HomePage />);

    expect(consoleSpy).not.toHaveBeenCalled();
    consoleSpy.mockRestore();
  });

  it('handles component unmounting without errors', () => {
    const { unmount } = render(<HomePage />);

    expect(() => unmount()).not.toThrow();
  });

  it('renders all required sections for a complete homepage', () => {
    render(<HomePage />);

    // Verify essential homepage content is present (loading states + static sections)
    expect(screen.getByText('BlackWoods Creative')).toBeInTheDocument(); // Hero
    expect(screen.getByText('Loading portfolio...')).toBeInTheDocument(); // Portfolio
    expect(screen.getByText('Experience the Difference')).toBeInTheDocument(); // Vision
    expect(screen.getByTestId('about-section')).toBeInTheDocument(); // About (static)
    expect(screen.getByTestId('contact-section')).toBeInTheDocument(); // Contact (static)
    expect(screen.getByTestId('footer')).toBeInTheDocument(); // Footer (static)
  });

  it('provides proper accessibility structure', () => {
    render(<HomePage />);

    // Check that accessible content is present
    expect(screen.getByText('BlackWoods Creative')).toBeInTheDocument(); // Hero content
    expect(screen.getByTestId('footer')).toBeInTheDocument(); // Footer
  });
});
